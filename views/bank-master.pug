extends layout
include mixins/mixins

block content
    // Alert for messages
    div#messageAlert.alert.alert-dismissible.fade(role="alert" style="display: none;")
        span#messageText
        button.close(type="button", data-dismiss="alert", aria-label="Close")
            span(aria-hidden="true") &times;
    
    // Sticky header
    .banks-header-sticky
        .container-fluid
            .row.align-items-center.py-3
                .col
                    h4.mb-0.text-primary Bank Master
                .col-auto
                    if canAdd
                        button.btn.btn-success.btn-sm#addBankBtn(type="button", data-toggle="modal", data-target="#addBankModal", style="margin-right: 8px;")
                            i.bi.bi-plus-circle
                            span.d-none.d-md-inline.ms-1 Add Bank
                            span.d-inline.d-md-none.ms-1 Add
                    button.btn.btn-warning.btn-sm#viewDisabledBtn(type="button", onclick="window.location.href='/bank-master/enable'", style="margin-right: 8px;")
                        i.bi.bi-eye-slash
                        span.d-none.d-md-inline.ms-1 View Disabled
                        span.d-inline.d-md-none.ms-1 Disabled
                    button.btn.btn-info.btn-sm#refreshDataBtn(type="button")
                        i.bi.bi-arrow-clockwise
                        span.d-none.d-md-inline.ms-1 Refresh

    // Banks content
    .banks-container
        // Search Box
        .row.mb-3
            .col-12.col-md-6.col-lg-4
                .input-group
                    .input-group-prepend
                        span.input-group-text
                            i.bi.bi-search
                    input.form-control#searchInput(
                        type="text",
                        placeholder="Search by bank name, account number, branch...",
                        autocomplete="off"
                    )
                    .input-group-append
                        button.btn.btn-outline-secondary#clearSearch(type="button", style="display: none;")
                            i.bi.bi-x-circle
        
        // Desktop table view
        .desktop-table-view.d-none.d-lg-block
            .table-responsive.table-desktop-container
                table.table.table-hover.table-striped(id="banks-master-table")
                    thead.thead-dark.sticky-top
                        tr
                            th #
                            th Bank Name
                            th Branch
                            th Account Number
                            th IFSC Code
                            th Account Nickname
                            th Type
                            th CC Limit
                            th Ledger Name
                            th Internal
                            th Oil Company
                            if canEdit || canDisable
                                th Actions
                    tbody
                        if banks && banks.length > 0
                            each bank, index in banks
                                tr(data-bank-id=bank.bank_id)
                                    td= index + 1
                                    td= bank.bank_name
                                    td= bank.bank_branch
                                    td= bank.account_number
                                    td= bank.ifsc_code
                                    td= bank.account_nickname || '-'
                                    td= bank.type || '-'
                                    td= bank.cc_limit ? bank.cc_limit.toLocaleString() : '-'
                                    td= bank.ledger_name || '-'
                                    td
                                        span.badge(class=bank.internal_flag === 'Y' ? 'badge-info' : 'badge-secondary')
                                            = bank.internal_flag === 'Y' ? 'Yes' : 'No'
                                    td
                                        span.badge(class=bank.is_oil_company === 'Y' ? 'badge-warning' : 'badge-secondary')
                                            = bank.is_oil_company === 'Y' ? 'Yes' : 'No'
                                    if canEdit || canDisable
                                        td
                                            if canEdit
                                                button.btn.btn-primary.btn-sm.me-1.edit-bank-btn(type="button", data-index=index, data-bank-id=bank.bank_id)
                                                    i.bi.bi-pencil
                                            if canDisable
                                                button.btn.btn-danger.btn-sm.disable-bank-btn(type="button", data-index=index, data-bank-id=bank.bank_id)
                                                    i.bi.bi-trash
                        else
                            tr
                                td(colspan="12").text-center No banks found
        
        // Mobile cards view
        .mobile-cards-view.d-block.d-lg-none
            if banks && banks.length > 0
                each bank, index in banks
                    .card.bank-card.mb-3(data-bank-id=bank.bank_id)
                        .card-header
                            .d-flex.justify-content-between.align-items-center
                                div
                                    strong= bank.bank_name
                                    if bank.internal_flag === 'Y'
                                        span.badge.badge-info.ml-2 Internal
                                    if bank.is_oil_company === 'Y'
                                        span.badge.badge-warning.ml-2 Oil Co.
                                .bank-actions
                                    if canEdit
                                        button.btn.btn-primary.btn-sm.me-1.edit-bank-btn(type="button", data-index=index, data-bank-id=bank.bank_id)
                                            i.bi.bi-pencil
                                    if canDisable
                                        button.btn.btn-danger.btn-sm.disable-bank-btn(type="button", data-index=index, data-bank-id=bank.bank_id)
                                            i.bi.bi-trash
                        .card-body.p-3
                            .row.g-2
                                .col-6
                                    .bank-detail
                                        small.text-muted Branch
                                        input.mobile-input.fw-bold(type="text", id=`mobile-branch-${index}`, value=bank.bank_branch, readonly, style="border: none; background: transparent; padding: 0; font-weight: bold;")
                                .col-6
                                    .bank-detail
                                        small.text-muted Account Number
                                        input.mobile-input.fw-bold(type="text", id=`mobile-account-${index}`, value=bank.account_number, readonly, style="border: none; background: transparent; padding: 0; font-weight: bold;")
                                .col-12
                                    .bank-detail
                                        small.text-muted IFSC Code
                                        input.mobile-input.fw-bold(type="text", id=`mobile-ifsc-${index}`, value=bank.ifsc_code, readonly, style="border: none; background: transparent; padding: 0; font-weight: bold;")
                                if bank.account_nickname
                                    .col-12
                                        .bank-detail
                                            small.text-muted Nickname
                                            div.fw-bold= bank.account_nickname
                                if bank.type
                                    .col-6
                                        .bank-detail
                                            small.text-muted Type
                                            div= bank.type
                                if bank.cc_limit
                                    .col-6
                                        .bank-detail
                                            small.text-muted CC Limit
                                            div= bank.cc_limit.toLocaleString()
                                if bank.ledger_name
                                    .col-12
                                        .bank-detail
                                            small.text-muted Ledger Name
                                            div= bank.ledger_name
            else
                .alert.alert-info.text-center
                    i.bi.bi-info-circle
                    |  No banks found

    // Add Bank Modal
    .modal.fade#addBankModal(tabindex="-1", role="dialog", aria-labelledby="addBankModalLabel", aria-hidden="true")
        .modal-dialog.modal-lg(role="document")
            .modal-content
                .modal-header
                    h5.modal-title#addBankModalLabel Add New Bank
                    button.close(type="button", data-dismiss="modal", aria-label="Close")
                        span(aria-hidden="true") &times;
                .modal-body
                    form#addBankForm(method='POST', action='/bank-master')
                        .row
                            .col-md-6.mb-3
                                label.form-label Bank Name *
                                input.form-control(type="text", name="bank_name", required)
                            .col-md-6.mb-3
                                label.form-label Branch *
                                input.form-control(type="text", name="bank_branch", required)
                            .col-md-6.mb-3
                                label.form-label Account Number *
                                input.form-control(type="text", name="account_number", required)
                            .col-md-6.mb-3
                                label.form-label IFSC Code *
                                input.form-control(type="text", name="ifsc_code", required)
                            .col-md-6.mb-3
                                label.form-label Account Nickname
                                input.form-control(type="text", name="account_nickname")
                            .col-md-6.mb-3
                                label.form-label Type
                                input.form-control(type="text", name="type")
                            .col-md-6.mb-3
                                label.form-label CC Limit
                                input.form-control(type="number", name="cc_limit", min="0")
                            .col-md-6.mb-3
                                label.form-label Ledger Name
                                input.form-control(type="text", name="ledger_name")
                            .col-md-6.mb-3
                                label.form-label Internal Account
                                select.form-control(name="internal_flag")
                                    option(value="N") No
                                    option(value="Y") Yes
                            .col-md-6.mb-3
                                label.form-label Oil Company
                                select.form-control(name="is_oil_company")
                                    option(value="N") No
                                    option(value="Y") Yes
                        .modal-footer
                            button.btn.btn-secondary(type="button", data-dismiss="modal") Cancel
                            button.btn.btn-primary(type="submit") Save Bank

    // Edit Bank Modal
    .modal.fade#editBankModal(tabindex="-1", role="dialog")
        .modal-dialog.modal-lg(role="document")
            .modal-content
                .modal-header
                    h5.modal-title Edit Bank
                    button.close(type="button", data-dismiss="modal", aria-label="Close")
                        span(aria-hidden="true") &times;
                .modal-body
                    form#editBankForm
                        input(type="hidden", name="bank_id", id="edit-bank-id")
                        .row
                            .col-md-6.mb-3
                                label.form-label Bank Name *
                                input.form-control(type="text", name="bank_name", id="edit-bank-name", required)
                            .col-md-6.mb-3
                                label.form-label Branch *
                                input.form-control(type="text", name="bank_branch", id="edit-bank-branch", required)
                            .col-md-6.mb-3
                                label.form-label Account Number *
                                input.form-control(type="text", name="account_number", id="edit-account-number", required)
                            .col-md-6.mb-3
                                label.form-label IFSC Code *
                                input.form-control(type="text", name="ifsc_code", id="edit-ifsc-code", required)
                            .col-md-6.mb-3
                                label.form-label Account Nickname
                                input.form-control(type="text", name="account_nickname", id="edit-account-nickname")
                            .col-md-6.mb-3
                                label.form-label Type
                                input.form-control(type="text", name="type", id="edit-type")
                            .col-md-6.mb-3
                                label.form-label CC Limit
                                input.form-control(type="number", name="cc_limit", id="edit-cc-limit", min="0")
                            .col-md-6.mb-3
                                label.form-label Ledger Name
                                input.form-control(type="text", name="ledger_name", id="edit-ledger-name")
                            .col-md-6.mb-3
                                label.form-label Internal Account
                                select.form-control(name="internal_flag", id="edit-internal-flag")
                                    option(value="N") No
                                    option(value="Y") Yes
                            .col-md-6.mb-3
                                label.form-label Oil Company
                                select.form-control(name="is_oil_company", id="edit-oil-company")
                                    option(value="N") No
                                    option(value="Y") Yes
                        .modal-footer
                            button.btn.btn-secondary(type="button", data-dismiss="modal") Cancel
                            button.btn.btn-primary(type="button", onclick="saveBankEdit()") Save Changes

    // CSS Styles
    style.
        .banks-header-sticky {
            position: sticky;
            top: 0;
            z-index: 1020;
            background: white;
            border-bottom: 2px solid #dee2e6;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .banks-container {
            padding-top: 15px;
        }
        
        @media (min-width: 992px) {
            .banks-header-sticky {
                margin-left: 260px;
            }
        }
        
        .bank-card {
            border-radius: 12px;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .bank-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        
        .bank-card .card-header {
            background: linear-gradient(45deg, #007bff, #0056b3);
            color: white;
            border-radius: 12px 12px 0 0;
        }
        
        .bank-detail {
            margin-bottom: 8px;
        }
        
        .bank-detail small {
            display: block;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 2px;
        }
        
        .table-desktop-container {
            max-height: calc(100vh - 200px);
            overflow-y: auto;
        }
        
        .table-desktop-container thead th {
            position: sticky;
            top: 0;
            background: #343a40;
            color: white;
            z-index: 10;
        }

    
    // JavaScript
    script.
        let banksData = !{JSON.stringify(banks)};
        const canEdit = #{canEdit ? 'true' : 'false'};
        const canAdd = #{canAdd ? 'true' : 'false'};
        const canDisable = #{canDisable ? 'true' : 'false'};
        
        // Event delegation for edit and disable buttons
        document.addEventListener('DOMContentLoaded', function() {
            // Edit bank buttons
            document.querySelectorAll('.edit-bank-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const index = parseInt(this.dataset.index);
                    const bankId = parseInt(this.dataset.bankId);
                    editBank(index, bankId);
                });
            });
            
            // Disable bank buttons
            document.querySelectorAll('.disable-bank-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const index = parseInt(this.dataset.index);
                    const bankId = parseInt(this.dataset.bankId);
                    disableBank(index, bankId);
                });
            });
        });
        
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const clearBtn = document.getElementById('clearSearch');
            
            if (searchTerm) {
                clearBtn.style.display = 'block';
            } else {
                clearBtn.style.display = 'none';
            }
            
            filterBanks(searchTerm);
        });
        
        document.getElementById('clearSearch').addEventListener('click', function() {
            document.getElementById('searchInput').value = '';
            this.style.display = 'none';
            filterBanks('');
        });
        
        function filterBanks(searchTerm) {
            const desktopRows = document.querySelectorAll('#banks-master-table tbody tr');
            const mobileCards = document.querySelectorAll('.bank-card');
            
            desktopRows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            });
            
            mobileCards.forEach(card => {
                const text = card.textContent.toLowerCase();
                card.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        }
        
        // Refresh data
        document.getElementById('refreshDataBtn').addEventListener('click', function() {
            location.reload();
        });
        
        // Edit bank (desktop and mobile)
        function editBank(index, bankId) {
            const bank = banksData[index];
            document.getElementById('edit-bank-id').value = bank.bank_id;
            document.getElementById('edit-bank-name').value = bank.bank_name;
            document.getElementById('edit-bank-branch').value = bank.bank_branch;
            document.getElementById('edit-account-number').value = bank.account_number;
            document.getElementById('edit-ifsc-code').value = bank.ifsc_code;
            document.getElementById('edit-account-nickname').value = bank.account_nickname || '';
            document.getElementById('edit-type').value = bank.type || '';
            document.getElementById('edit-cc-limit').value = bank.cc_limit || '';
            document.getElementById('edit-ledger-name').value = bank.ledger_name || '';
            document.getElementById('edit-internal-flag').value = bank.internal_flag;
            document.getElementById('edit-oil-company').value = bank.is_oil_company;
            
            $('#editBankModal').modal('show');
        }
        
        // Save bank edit
        function saveBankEdit() {
            const bankId = document.getElementById('edit-bank-id').value;
             // Get values and handle empty strings for ENUM fields
            const internalFlag = document.getElementById('edit-internal-flag').value;
            const isOilCompany = document.getElementById('edit-oil-company').value;

            const formData = {
                bank_name: document.getElementById('edit-bank-name').value,
                bank_branch: document.getElementById('edit-bank-branch').value,
                account_number: document.getElementById('edit-account-number').value,
                ifsc_code: document.getElementById('edit-ifsc-code').value,
                account_nickname: document.getElementById('edit-account-nickname').value,
                type: document.getElementById('edit-type').value,
                cc_limit: document.getElementById('edit-cc-limit').value,
                ledger_name: document.getElementById('edit-ledger-name').value,
                internal_flag: internalFlag || 'N',  // Default to 'N' if empty
                is_oil_company: isOilCompany || 'N'  // Default to 'N' if empty
            };
            
            fetch(`/bank-master/api/${bankId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showMessage('Bank updated successfully', 'success');
                    $('#editBankModal').modal('hide');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showMessage(data.error || 'Error updating bank', 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Error updating bank', 'danger');
            });
        }
        
        // Disable bank
        function disableBank(index, bankId) {
            if (confirm('Are you sure you want to disable this bank?')) {
                fetch(`/bank-master/disable/${bankId}`, {
                    method: 'PUT'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showMessage('Bank disabled successfully', 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showMessage(data.error || 'Error disabling bank', 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showMessage('Error disabling bank', 'danger');
                });
            }
        }
        
        // Show message
        function showMessage(message, type) {
            const alert = document.getElementById('messageAlert');
            const messageText = document.getElementById('messageText');
            
            alert.className = `alert alert-${type} alert-dismissible fade show`;
            messageText.textContent = message;
            alert.style.display = 'block';
            
            setTimeout(() => {
                alert.style.display = 'none';
            }, 5000);
        }