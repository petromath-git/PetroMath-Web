mixin listProductNames(pumpProductValues, prefix)
    each val in pumpProductValues
        div.col(style=`background-color: rgb(${val.rgbColor}); margin: 0 10px;`)
            label= `${val.productAlias} Rate`
            input.form-control(type='number', id=prefix + `${val.textName}`, name=prefix + `${val.textName}`, value= val.productPrice, min="0" step=0.01)
            div &nbsp;
        
        input.form-control(type='hidden', id=prefix+`${val.productId}`, name=prefix+`${val.productId}`, value= val.productPrice)


//- Add new page: Dom elements to enter prices for products
//- mixin listProductNames(productValues, prefix)
//-     each val in productValues
//-         if(val.textName.startsWith("ms"))
//-             div.col.bg-success
//-                 label= `${val.productAlias} Rate`
//-                 input.form-control(type='number', id=prefix + `${val.textName}`, name=prefix + `${val.textName}`, value= val.productPrice, min="0" step=0.01)
//-                 div &nbsp;
//-         // Price for HSD
//-         if(val.textName.startsWith("hsd"))
//-             div.col.bg-primary
//-                 label= `${val.productAlias} Rate`
//-                 input.form-control(type='number', id=prefix + `${val.textName}`, name=prefix + `${val.textName}`, value= val.productPrice, min="0" step=0.01)
//-         // Price for XMS
//-         if(val.textName.startsWith("xms"))
//-             div.col.table-warning
//-                 label= `${val.productAlias} Rate`
//-                 input.form-control(type='number', id=prefix + `${val.textName}`, name=prefix + `${val.textName}`, value= val.productPrice, min="0" step=0.01)

//-         input.form-control(type='hidden', id=prefix+`${val.productId}`, name=prefix+`${val.productId}`, value= val.productPrice)

//- Add/edit page: Dom elements to display pricing for selected pumps
//- mixin addProductCodesAsSelected(val, tableColor, pumpInstance, reading)
//-     - console.log('Pump val:', val);
//-     - var pumpUniqueName = `${pumpInstance}${val.pumpCode}`;
//-     - var hideCls = 'col-3 d-md-none'
//-     - var price = reading ? reading.price : val.productPrice
//-     - var readingId = reading ? reading.readingId : "";
//-     - var pumpClosing = reading ? reading.pumpClosing : val.pumpOpening;
//-     - var pumpOpening = reading ? reading.pumpOpening : val.pumpOpening;
//-     - var pumpTesting = reading ? reading.pumpTesting : 0;
//-     if (reading)
//-         - hideCls = 'col-3 d-md-block'
//-     div(id=pumpUniqueName+`_sub_header` style="padding:0 10px" class=hideCls)
//-         input(type='hidden' id=pumpUniqueName + '_hiddenId' value=readingId)
//-         input(type='hidden' id=pumpUniqueName + '_price' value=price)
//-         input(type='hidden' id=pumpUniqueName + '_pumpId' value=val.pumpId)
//-         div
//-             span= val.pumpCode
//-             span &nbsp;&nbsp;&nbsp;&nbsp;
//-             if price > 0
//-                 span(id=pumpUniqueName + `_sub_header_price`) Rs. #{price}
//-             else
//-                 span(id=pumpUniqueName + `_sub_header_price`) [price]
//-             span(align="right")
//-                 button.close(type="button" aria-label="Close" onclick='hideAndDeleteReadingPump(\'' + pumpUniqueName + `_sub_header` + '\')')
//-                     span(aria-hidden="true") &times;
//-         div.table-responsive(id=pumpUniqueName+`_readings`)
//-             table.table.table-sm(class=tableColor)
//-                 tbody
//-                     tr
//-                         td
//-                             label(for=pumpUniqueName + `pump_closing`) Closing
//-                         td
//-                             input.form-control(type="number", name=pumpUniqueName + `pump_closing`, id=pumpUniqueName + `pump_closing`, value= pumpClosing, min="0" step=0.001 onChange=`calculatePumpSale(\`${pumpUniqueName}\`)` oninput='validity.valid||(value="0")')
//-                     tr
//-                         td
//-                             label(for=pumpUniqueName + `pump_opening`) Opening
//-                         td
//-                             input.form-control(type='number', name=pumpUniqueName + `pump_opening`, id=pumpUniqueName + `pump_opening`, value= pumpOpening, min="0" step=0.001 onChange=`calculatePumpSale(\`${pumpUniqueName}\`)` oninput='validity.valid||(value="0")')
//-                     tr
//-                         td
//-                             label(for=pumpUniqueName + `pump_testing`) Testing
//-                         td
//-                             input.form-control(type='number', name=pumpUniqueName + `pump_testing`, id=pumpUniqueName + `pump_testing`, value= pumpTesting, min="0" step=0.001 onChange=`calculatePumpSale(\`${pumpUniqueName}\`)` oninput='validity.valid||(value="0")' )
//-                     tr
//-                         td
//-                             label(for=pumpUniqueName+`pump_sale`) Sale
//-                         td
//-                             input.form-control(type='text' name=pumpUniqueName+`pump_sale` id=pumpUniqueName+`pump_sale` readonly value=0)
//-                     tr
//-                         td
//-                             span Amount
//-                         td
//-                             input.form-control(type='text' name=pumpUniqueName+`pump_amount` id=pumpUniqueName+`pump_amount` readonly value=0)


mixin addProductCodesAsSelected(val, productValuesData, pumpInstance, reading)
    //- Find the product that matches this pump's productCode
    - var matchingProduct = productValuesData.find(p => p.productName === val.productCode);
    - var rgbColor = matchingProduct ? matchingProduct.rgbColor : '200,200,200'; // fallback to gray
    
    - var pumpUniqueName = `${pumpInstance}${val.pumpCode}`;
    - var hideCls = 'col-3 d-md-none'
    - var price = reading ? reading.price : val.productPrice
    - var readingId = reading ? reading.readingId : "";
    - var pumpClosing = reading ? reading.pumpClosing : val.pumpOpening;
    - var pumpOpening = reading ? reading.pumpOpening : val.pumpOpening;
    - var pumpTesting = reading ? reading.pumpTesting : 0;
    if (reading)
        - hideCls = 'col-3 d-md-block'
    div(id=pumpUniqueName+`_sub_header` style="padding:0 10px" class=hideCls)
        input(type='hidden' id=pumpUniqueName + '_hiddenId' value=readingId)
        input(type='hidden' id=pumpUniqueName + '_price' value=price)
        input(type='hidden' id=pumpUniqueName + '_pumpId' value=val.pumpId)
        div
            span= val.pumpCode
            span &nbsp;&nbsp;&nbsp;&nbsp;
            if price > 0
                span(id=pumpUniqueName + `_sub_header_price`) Rs. #{price}
            else
                span(id=pumpUniqueName + `_sub_header_price`) [price]
            span(align="right")
                button.close(type="button" aria-label="Close" onclick='hideAndDeleteReadingPump(\'' + pumpUniqueName + `_sub_header` + '\')')
                    span(aria-hidden="true") &times;
        div.table-responsive(id=pumpUniqueName+`_readings`)
            table.table.table-sm(style=`background-color: rgb(${rgbColor})`)
                tbody
                    tr
                        td
                            label(for=pumpUniqueName + `pump_closing`) Closing
                        td
                            input.form-control(type="number", name=pumpUniqueName + `pump_closing`, id=pumpUniqueName + `pump_closing`, value= pumpClosing, min="0" step=0.001 onChange=`calculatePumpSale(\`${pumpUniqueName}\`)` oninput='validity.valid||(value="0")')
                    tr
                        td
                            label(for=pumpUniqueName + `pump_opening`) Opening
                        td
                            input.form-control(type='number', name=pumpUniqueName + `pump_opening`, id=pumpUniqueName + `pump_opening`, value= pumpOpening, min="0" step=0.001 onChange=`calculatePumpSale(\`${pumpUniqueName}\`)` oninput='validity.valid||(value="0")' readonly= isOpeningReadonly ? true : false)
                    tr
                        td
                            label(for=pumpUniqueName + `pump_testing`) Testing
                        td
                            input.form-control(type='number', name=pumpUniqueName + `pump_testing`, id=pumpUniqueName + `pump_testing`, value= pumpTesting, min="0" step=0.001 onChange=`calculatePumpSale(\`${pumpUniqueName}\`)` oninput='validity.valid||(value="0")' )
                    tr
                        td
                            label(for=pumpUniqueName+`pump_sale`) Sale
                        td
                            input.form-control(type='text' name=pumpUniqueName+`pump_sale` id=pumpUniqueName+`pump_sale` readonly value=0)
                    tr
                        td
                            span Amount
                        td
                            input.form-control(type='text' name=pumpUniqueName+`pump_amount` id=pumpUniqueName+`pump_amount` readonly value=0)
                            
//- Add new page: Dom elements to enter prices for 2T products
mixin list2TProductNames(val)
    div.col-6
        input(type='hidden' id=val.textName+'-rate' + '_hiddenId' value=val.productId)
        label.sub-header(for=val.textName+'-rate') #{val.productName} Rate
        input.form-control(type='number', id=val.textName+'-rate', name=val.textName+'-rate', value=val.productPrice, min=0 step=0.01 oninput='validity.valid||(value="")' onChange='calculate2TSale(\'' + val.textName+ '\')')


//- Add new page: Dom elements to display pricing for 2T loose and 2T pouch
mixin add2TProducts(val)
    - var product2TName = val.productAlias
    - var stepValue = 0.001
    if (product2TName == 'pouch2t')
        - stepValue = 1
    div.col-6
        input(type='hidden' id=product2TName + '_hiddenId' value=val.t2tOilId)
        h5.sub-header= val.productName
        div.container.table-primary
            div.table-responsive
                table.table.table-sm
                    tbody
                        tr
                            td
                                label(for=product2TName+'_given') Given:
                            td
                                input.form-control(id=product2TName+'_given', name=product2TName+'_given', type='number', min=0 oninput='validity.valid||(value="")' onChange=`calculate2TSale( \`${product2TName}\`)` value=val.givenQty step=stepValue)
                        tr
                            td
                                label(for=product2TName+'_remain') Remain:
                            td
                                input.form-control(id=product2TName+'_remain', name=product2TName+'_remain', type='number', min=0 oninput='validity.valid||(value="")' onChange=`calculate2TSale( \`${product2TName}\`)` value=val.returnedQty step=stepValue)
                        tr
                            td
                                label Sale:
                            td
                                input.form-control(type='number' name=product2TName + '_sale' id=product2TName + '_sale' readonly value=0)
                        tr
                            td
                                label Amount:
                            td
                                input.form-control(type='text' name=product2TName + '_amount' id=product2TName + '_amount' readonly value=0)


//- Add new page: Dom elements to show cash sale details
mixin addCashSales(cashSaleRowNo, rowData)
    - var prefix = 'cash-sale-';
    - var trId = prefix + 'table-row-'+cashSaleRowNo;
    - var trClass = 'd-md-none';
    - var price = 0;
    if(productValues && productValues[0])
        - price = productValues[0].productPrice;
    if(!rowData)
        - rowData = {price:price, priceDiscount:0, billNo:0, qty:0, amount:0};
    if(rowData.saleId && parseInt(rowData.saleId) > 0)
        - trClass = ''
    tr(class=trClass id=trId)
        input(type='hidden' id=prefix + cashSaleRowNo + '_hiddenId' value=rowData.saleId)
        td
            select.form-control(name=prefix+'product-'+cashSaleRowNo id=prefix+'product-'+cashSaleRowNo onChange='creditOrSaleUpdateProductTypePrices(this, ' + cashSaleRowNo + ', \'' + prefix +'\')')
                if productValues
                    each val in productValues
                        option(value=`${val.productId}` selected= val.productId === rowData.productId)= val.productAlias
        td
            input.form-control(name=prefix+'billno-' + cashSaleRowNo id=prefix+'billno-' + cashSaleRowNo value=rowData.billNo type='number' required min=1)
            
        td
            input.form-control(type='number' min=0 oninput='validity.valid||(value="0")' name=prefix+'price-' + cashSaleRowNo id=prefix+'price-' + cashSaleRowNo  value=rowData.price onchange='calculateCashOrCreditSale(\'' + prefix + '\', ' + cashSaleRowNo + ')' step=0.01 readonly)
        td
            input.form-control(type='number' min=0 oninput='validity.valid||(value="0")' name=prefix + 'discount-' + cashSaleRowNo id=prefix + 'discount-' + cashSaleRowNo  value=rowData.priceDiscount onchange='calculateCashOrCreditSale(\'' + prefix + '\', ' + cashSaleRowNo + ')' step=0.01)
        td
            input.form-control(type='number' name=prefix+'qty-' + cashSaleRowNo id=prefix+'qty-' + cashSaleRowNo min=0 oninput='validity.valid||(value="")' value=rowData.qty onchange='calculateCashOrCreditSale(\'' + prefix + '\', ' + cashSaleRowNo + ')' step=0.001)
        td
            input.form-control(type='number' name=prefix+'amt-' + cashSaleRowNo id=prefix+'amt-' + cashSaleRowNo min=0 oninput='validity.valid||(value="")' onchange='calculateCashOrCreditQuantity(\'' + prefix + '\', ' + cashSaleRowNo + ')' value=rowData.amount step=0.001)
        td
            textarea.form-control(name=prefix + 'notes-' + cashSaleRowNo id=prefix + 'notes-' + cashSaleRowNo style="height:36px")= rowData.notes
        td
            button.close(type="button" aria-label="Close" onclick='hideRow(\'' + trId + '\',"remove-cash-sale", calculateCashSaleTotal)')
                span(aria-hidden="true") &times;


//- Digital Sales: Dom elements to show digital sales details
mixin addDigitalSales(digitalSalesRowNo, rowData)
    - var prefix = 'digital-sales-';
    - var trId = prefix + 'table-row-'+digitalSalesRowNo;
    - var trClass = 'd-md-none';
    if(!rowData)
        - rowData = {amount:0, transactionDate: '', vendorId: null, notes: ''};
    if(rowData.digitalSalesId && parseInt(rowData.digitalSalesId) > 0)
        - trClass = ''
    tr(class=trClass id=trId)
        input(type='hidden' id=prefix + digitalSalesRowNo + '_hiddenId' value=rowData.digitalSalesId)
        td
            select.form-control(name=prefix + 'vendor-' + digitalSalesRowNo id=prefix + 'vendor-' + digitalSalesRowNo required)
                option(value='') Select Digital Vendor
                if creditCompanyValues
                    each vendor in creditCompanyValues
                        if vendor.card_flag === 'Y'
                            option(value=`${vendor.creditorId}` selected= vendor.creditorId === rowData.vendorId)= vendor.creditorName
        td
            input.form-control(type='number' name=prefix + 'amount-' + digitalSalesRowNo id=prefix + 'amt-' + digitalSalesRowNo min=0.01 step=0.01 required value=rowData.amount onchange='calculateDigitalSalesTotal()' oninput='validity.valid||(value="")')
        td
            input.form-control(type='date' name=prefix + 'transaction-date-' + digitalSalesRowNo id=prefix + 'transaction-date-' + digitalSalesRowNo required value=rowData.transactionDate)
        td
            textarea.form-control(name=prefix + 'notes-' + digitalSalesRowNo id=prefix + 'notes-' + digitalSalesRowNo style="height:36px")= rowData.notes
        if(!freezedRecord)
            td
                button.close(type="button" aria-label="Close" onclick='hideRow(\'' + trId + '\',"remove-digital-sales", calculateDigitalSalesTotal)')
                    span(aria-hidden="true") &times;

//- Add new page: used by addCredits & addCashSales - a separate fn will populate product rates
mixin optionsForProductRates(cashOrCreditSalePrefix)
    if productValues
        each val in productValues
            option(id=cashOrCreditSalePrefix + `${val.textName}`)= val.productAlias


//- Add new page: Dom elements to show credit details
mixin addCredits(creditRowNo, rowData)
    - var prefix = 'credit-';
    - var trId = prefix + 'table-row-'+creditRowNo;
    - var trClass = 'd-md-none';
    - var price = 0;
    - var creditType = undefined, creditName = undefined;
    if(productValues && productValues[0])
        - price = productValues[0].productPrice;
    if(creditCompanyValues && creditCompanyValues[0])
        - creditName = creditCompanyValues[0].creditorName;
    if(!rowData)
        - rowData = {price:price, priceDiscount:0, billNo:0, qty:0, amount:0, creditType: config.creditTypes[0], companyName: creditName, vehicleId: null, odometerReading: null};
    if(rowData.tCreditId && parseInt(rowData.tCreditId) > 0)
        - trClass = ''
    tr(class=trClass id=trId)
        input(type='hidden' id=prefix + creditRowNo + '_hiddenId' value=rowData.tCreditId)
        td
            select.form-control(name=prefix + 'product-'+creditRowNo id=prefix + 'product-'+creditRowNo  onChange='creditOrSaleUpdateProductTypePrices(this, ' + creditRowNo + ', \'' + prefix +'\')')
                if productValues
                    each val in productValues
                        option(value=`${val.productId}` selected= rowData.productId === val.productId)= val.productAlias
        td
            input.form-control(name=prefix + 'billno-' + creditRowNo id=prefix + 'billno-' + creditRowNo value=rowData.billNo type='number' min=1 oninput='validity.valid||(value="1")')
        td
            input(type='hidden' id=prefix +'companyName_'+ creditRowNo, value = rowData.companyName)
            select.form-control(name=prefix + 'type-' + creditRowNo, id=prefix + 'type-' + creditRowNo, onChange='toggleCreditTypes(this, ' + creditRowNo + ', \'' + prefix + '\', ' + JSON.stringify(config.creditTypes) + ')')
                if config.creditTypes
                    each val in config.creditTypes
                        option(value=`${val}` selected= rowData.creditType === val)= val
        td
            - var displayType1Class = 'd-md-none'
            if rowData.creditType === config.creditTypes[0]
                - displayType1Class = 'd-md-block'
            select.form-control(name=prefix + config.creditTypes[0] + '-' + creditRowNo id=prefix + config.creditTypes[0] + '-' + creditRowNo, class = displayType1Class, onChange='updateCreditAndLoadVehicles(this, \'' + prefix + '\', ' + creditRowNo + ')')
                if creditCompanyValues
                    each val in creditCompanyValues
                        if val.card_flag !== 'Y'
                            option(value=`${val.creditorId}` selected= rowData.creditListId === val.creditorId)= val.creditorName
            - var displayType2Class = 'd-md-none'
            if rowData.creditType === config.creditTypes[1]
                - displayType2Class = 'd-md-block'
            select.form-control(name=prefix + config.creditTypes[1] + '-' + creditRowNo id=prefix + config.creditTypes[1] + '-' + creditRowNo, class = displayType2Class, onChange='updateHiddenCreditId(this, \'' + prefix + '\', ' + creditRowNo + ')')
                if suspenseValues
                    each val in suspenseValues
                        if val.card_flag !== 'Y'
                            option(value=`${val.creditorId}` selected= rowData.creditListId === val.creditorId)= val.creditorName
        td
            select.form-control.select2-vehicle(name=prefix + 'vehicle-' + creditRowNo id=prefix + 'vehicle-' + creditRowNo data-row=creditRowNo)
                option(value='') Select Vehicle
                //- If editing and vehicle data exists, populate vehicles for the selected credit party
                if rowData.creditListId && vehicleData && vehicleData[rowData.creditListId]
                    each vehicle in vehicleData[rowData.creditListId]
                        option(value=vehicle.vehicleId selected= rowData.vehicleId === vehicle.vehicleId)= vehicle.vehicleNumber + ' (' + vehicle.vehicleType + ')'        
        td
            input.form-control(type='number' name=prefix + 'odometer-' + creditRowNo id=prefix + 'odometer-' + creditRowNo min=0 oninput='validity.valid||(value="")' value=rowData.odometerReading step=0.01 placeholder='Odometer Reading')
        td
            input.form-control(type='number' name=prefix + 'price-' + creditRowNo id=prefix + 'price-' + creditRowNo min=0 oninput='validity.valid||(value="")' value=rowData.price onchange='calculateCashOrCreditSale(\'' + prefix + '\', ' + creditRowNo + ')' step=0.01 readonly)
        td
            input.form-control(type='number' name=prefix + 'discount-' + creditRowNo id=prefix + 'discount-' + creditRowNo min=0 oninput='validity.valid||(value="")' value=rowData.priceDiscount onchange='calculateCashOrCreditSale(\'' + prefix + '\', ' + creditRowNo + ')' step=0.01)
        td
            input.form-control(type='number' name=prefix + 'qty-' + creditRowNo id=prefix + 'qty-' + creditRowNo min=0 oninput='validity.valid||(value="")' value=rowData.qty onchange='calculateCashOrCreditSale(\'' + prefix + '\', ' + creditRowNo + ')' step=0.001)
        td
            input.form-control(type='number' name=prefix + 'amt-' + creditRowNo id=prefix + 'amt-' + creditRowNo min=0 oninput='validity.valid||(value="")' value=rowData.amount onchange='calculateCashOrCreditQuantity(\'' + prefix + '\', ' + creditRowNo + ')' step=0.001)
        td
            textarea.form-control(name=prefix + 'notes-' + creditRowNo id=prefix + 'notes-' + creditRowNo style="height:36px")= rowData.notes
        td
            button.close(type="button" aria-label="Close" onclick='hideRow(\'' + trId + '\', "remove-credit-sale", calculateCreditTotal)')
                span(aria-hidden="true") &times;


//- Add new page: Dom elements to show new custom expenses on 'add'
mixin addExpenses(rowNo, rowData)
    - const prefix = 'exp-';
    - const trId = prefix + 'table-row-'+rowNo;
    - let trClass = 'd-md-none';
    - const requiredExpenses = ['Others', 'Suspense', 'Self'];
    if (!rowData)
        - rowData = {amount: 0}
    if (rowData.texpenseId)
        - trClass = ''

    tr(id=trId class=trClass)
        input(type='hidden' id=prefix + rowNo + '_hiddenId' value=rowData.texpenseId)
        td
            select.form-control(name=prefix + 'expense-'+rowNo id=prefix + 'expense-'+rowNo onchange='populateDefaultExpenseAmt(this)')
                each val in expenseValues
                    if(!(rowData && val.expenseName == 'Suspense') || (rowData && rowData.expenseName == 'Suspense'))
                        option(value=`${JSON.stringify(val)}` selected= val.expenseId == rowData.expenseId)= val.expenseName
        td
            input.form-control(type='number' name=prefix + 'amt-'+rowNo id=prefix + 'amt-'+rowNo min=0 oninput='validity.valid||(value="")' step=0.01 onChange="calculateExpenseTotal()" value= rowData.amount)
        td
            textarea.form-control(name=prefix + 'notes-'+rowNo id=prefix + 'notes-'+rowNo style='height:36px')= rowData.notes
            div.invalid-feedback Notes is required.
        td
            button.close(type="button" aria-label="Close"  onclick='hideRow(\'' + trId + '\', "remove-expense", calculateExpenseTotal)')
                span(aria-hidden="true") &times;

//- Add new page: Show rows for each denomination
mixin addDenomRows(denominationValues)
    - const prefix = 'denom-';
    if denominationValues
        each val in denominationValues
            - var demonCnt = 0
            if(val.denominationCnt)
                - demonCnt = val.denominationCnt
            tr
                input(type='hidden' id=prefix + val.id + '_hiddenId' value=val.denomTxnId)
                td(width="40%")
                    label(for=prefix + val.label + '-cnt')= val.label
                td(width="60%")
                    input.form-control(type='number' min=0 oninput='validity.valid||(value="")' id=prefix + val.id + '-cnt', name=prefix + val.id + '-cnt' value=demonCnt onChange=`calculateDenominations()` step= (val.id == 0 || val.id == 1 ? 0.01: 1))


//- Add new page: Show rows for attendance
mixin addNewAttendance(rowNo, rowData)
    - var prefix = 'attendance-';
    - var trId = prefix + 'table-row-'+rowNo;
    - var trClass = 'd-md-none';
    if(!rowData)
        - rowData = {tAttendanceId:0, outDateTime: '0000-00-00T00:00', inDateTime: '0000-00-00T00:00'}
    if(rowData.tAttendanceId && parseInt(rowData.tAttendanceId) > 0)
        - trClass = ''
    tr(class=trClass id=trId)
        input(type='hidden' id=prefix + rowNo + '_hiddenId' value=rowData.tAttendanceId)
        td
            select.form-control(name=prefix +'personId-'+rowNo, id=prefix +'personId-'+rowNo required)
                if usersList
                    each val in usersList
                        option(value=`${val.personId}`  selected= rowData.personId === val.personId)= val.personName
            div.invalid-feedback Person is required.
        td
            select.form-control(name=prefix +'shift-'+rowNo, id=prefix +'shift-'+rowNo required)
                if config.shiftType
                    each val in config.shiftType
                        option(value=`${val}` selected= rowData.shiftType === val)= val
        td

            input.form-control(type='datetime-local' name=prefix + 'INtime-' + rowNo id=prefix + 'INtime-' + rowNo value= rowData.inDateTime required)
            div.invalid-feedback IN Date/Time is required.
            //- .container
            //-     .row
            //-         .col-sm-6
            //-             //- .form-group
            //-             //-     #datetimepicker1.input-group.date
            //-             input.form-control(type='text')
            //-                     //- span.input-group-addon
            //-                     //-     span.glyphicon.glyphicon-calendar
            //-     script.
            //-         $(function() {  
            //-             $('#datetimepicker1').datetimepicker();  
            //-         }); 
            //- .md-form.mx-5.my-5
            //-     input.form-control.date-time.picker-opener(placeholder='Date and Time' type='text' data-open='picker2')
            //-     input#picker2.form-control.time-date-ghost(placeholder='Selected date' type='text')
            //-     input.form-control.timepicker.time-date-ghost(placeholder='Selected time' data-open='picker2' type='text')
                //$('.date-time-2').dateTimePicker();

        td
            input.form-control(type='datetime-local' name=prefix + 'OUTtime-' + rowNo id=prefix + 'OUTtime-' + rowNo value=rowData.outDateTime required)
            div.invalid-feedback OUT Date/Time is required.
        td
            textarea.form-control(name=prefix + 'notes-' + rowNo id=prefix + 'notes-' + rowNo style="height:36px")= rowData.notes
        td
            button.close(type="button" aria-label="Close" onclick='hideRow(\'' + trId + '\',"remove-attendance")')
                span(aria-hidden="true") &times;